{"version":3,"sources":["index.js"],"names":["BLUE_BUTTON","PINK_BUTTON","NO_BUTTON","GRAY_BUTTON","TILE_SET","Tile","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","buttonClass","onClick","value","EmptyTile","Tiles","_this","this","values","length","map","index","key","React","Component","Game","_this2","Object","_Users_oliverlang_Documents_Code_SumFun_sum_fun_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_oliverlang_Documents_Code_SumFun_sum_fun_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_oliverlang_Documents_Code_SumFun_sum_fun_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","problem","addTiles","solution","solved","clickCount","tileCount","newProblem","i","Math","floor","random","push","setState","chosen","splice","concat","isCorrect","_this3","addMoreTiles","handleProblemClick","handleSolutionClick","solutionString","join","left","split","right","eval","_unused","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81ec2bf7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst BLUE_BUTTON = \"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\"\nconst PINK_BUTTON = \"bg-pink-500 hover:bg-pink-400 text-white font-bold py-2 px-4 border-b-4 border-pink-700 hover:border-pink-500 rounded\"\nconst NO_BUTTON = \"font-bold py-2 px-4 border-b-4 border-grey-700 rounded\"\nconst GRAY_BUTTON = \"bg-gray-500 hover:bg-gray-400 text-white font-bold py-2 px-4 border-b-4 border-gray-700 hover:border-gray-500 rounded\"\nconst TILE_SET = [1, 2, 3, 4, 5, 6, 7, 8, 9, '+', '-']\n\nfunction Tile(props) {\n  return (\n    <button className={props.buttonClass} onClick={props.onClick}>\n        {props.value}\n    </button>\n  )\n}\n\nfunction EmptyTile() {\n  return (\n    <button className={NO_BUTTON}></button>\n  )\n}\n\nclass Tiles extends React.Component {\n  render() {\n    if (this.props.values.length === 0) {\n      return (\n        <div>\n          <EmptyTile />\n        </div>\n      )\n    } else {\n      return (\n        <div>\n            { this.props.values.map((value, index) => (\n              <Tile\n                key={index}\n                value={value}\n                onClick={() => this.props.onClick(index)}\n                buttonClass={this.props.buttonClass}\n              />\n            ))}\n        </div>\n      )\n    }\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      problem: this.addTiles(['='], 5),\n      solution: [],\n      solved: false,\n      clickCount: 0,\n    };\n  }\n\n  addTiles(problem, tileCount) {\n    let newProblem = problem;\n    for (var i=0; i < tileCount; i++) {\n      const index = Math.floor(Math.random() * TILE_SET.length);\n      newProblem.push(TILE_SET[index]);\n    }\n    return newProblem;\n  }\n\n  addMoreTiles() {\n    let problem = this.state.problem;\n    this.setState({\n      problem: this.addTiles(problem, 3),\n    })\n  }\n\n  handleProblemClick(i) {\n    let problem = this.state.problem;\n    const chosen = this.state.problem[i];\n    problem.splice(i, 1);\n\n    const solution = this.state.solution.concat(chosen);\n    let solved = false;\n    if (problem.length === 0) {\n      solved = isCorrect(solution);\n    }\n\n    this.setState({\n      problem: problem,\n      solution: solution,\n      solved: solved,\n      clickCount: this.state.clickCount + 1,\n    });\n  }\n\n  handleSolutionClick(i) {\n    let solution = this.state.solution;\n    const chosen = this.state.solution[i];\n    solution.splice(i, 1);\n\n    this.setState({\n      problem: this.state.problem.concat(chosen),\n      solution: solution,\n      clickCount: this.state.clickCount + 1,\n    });\n  }\n\n  render() {\n    const problem = this.state.problem;\n    const solution = this.state.solution;\n    const solved = this.state.solved;\n\n    return (\n      <div className=\"w-full flex content-center flex-wrap h-screen\">\n        <div className=\"w-full text-center mb-10\">\n          <h1>{solved ? \"SOLVED!\" : \"Make me a valid equation using all the tiles.\"}</h1>\n          <h1>You have made {this.state.clickCount} clicks.</h1>\n        </div>\n        <div className=\"w-full text-center mb-2\">\n          <button onClick={() => this.addMoreTiles()} className={GRAY_BUTTON}>\n              More tiles?\n          </button>\n        </div>\n        <div className=\"w-full text-center mb-2\">\n          <Tiles\n            values={problem}\n            onClick={i => this.handleProblemClick(i)}\n            buttonClass={BLUE_BUTTON}\n          />\n        </div>\n        <div className=\"w-full text-center mt-2\">\n          <Tiles\n            values={solution}\n            onClick={i => this.handleSolutionClick(i)}\n            buttonClass={PINK_BUTTON}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\nfunction isCorrect(solution) {\n  const solutionString = solution.join('');\n  const left = solutionString.split('=')[0];\n  const right = solutionString.split('=')[1];\n\n  try {\n    return eval(left) === eval(right);\n  } catch {\n    return false\n  }\n}\n"],"sourceRoot":""}